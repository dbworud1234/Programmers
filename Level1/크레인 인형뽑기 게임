import java.util.Stack;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        int move = 0;
        Stack<Integer> stack = new Stack<>();
        for(int i = 0; i < moves.length; i++) {
            move = moves[i] - 1;
            for(int j = 0; j < board.length; j++) {
                if(board[j][move] == 0) continue;
                else {
                    if(stack.empty()) {
                        stack.push(board[j][move]);
                        board[j][move] = 0;
                        break;
                    }
                    else if(!stack.empty() && stack.peek() == board[j][move]) {
                        stack.pop();
                        board[j][move] = 0;
                        answer++;
                        break;
                    }
                    else {
                        stack.push(board[j][move]);
                        board[j][move] = 0;
                        break;
                    }
                }
            }
        }
        return answer * 2;
    }
}
